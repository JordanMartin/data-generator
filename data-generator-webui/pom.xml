<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.jordanmartin.datagenerator</groupId>
  <artifactId>webui</artifactId>
  <version>1.7.0</version>
  <packaging>pom</packaging>

  <properties>
    <webapp-output-location>../data-generator-api/src/main/resources/META-INF/resources</webapp-output-location>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>build-webui</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <!-- Clean generated webapp -->
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <version>2.4.1</version>
            <configuration>
              <filesets>
                <fileset>
                  <directory>${webapp-output-location}</directory>
                  <includes>
                    <include>**</include>
                  </includes>
                  <followSymlinks>false</followSymlinks>
                </fileset>
              </filesets>
            </configuration>
          </plugin>

          <!-- Build webapp  -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.3.2</version>
            <executions>
              <!-- Required: The following will ensure `npm install` is called
                   before anything else during the 'Default Lifecycle' -->
              <execution>
                <id>npm install (initialize)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>initialize</phase>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>install</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Required: The following will ensure `npm install` is called
                   before anything else during the 'Clean Lifecycle' -->
              <execution>
                <id>npm install (clean)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>pre-clean</phase>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>install</argument>
                  </arguments>
                </configuration>
              </execution>

              <execution>
                <id>npm config list (validate)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>validate</phase>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>config</argument>
                    <argument>list</argument>
                  </arguments>
                </configuration>
              </execution>

              <execution>
                <id>npm run build (compile)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>compile</phase>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>run</argument>
                    <argument>build</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Copy webapp -->
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>copy-resource-one</id>
                <phase>compile</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${webapp-output-location}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>dist</directory>
                      <includes>
                        <include>*</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
